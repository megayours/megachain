                            <entry key="example_dapp1/tracker/functions.rell">
                                <string>function attach(yours.token) {
  yours.attach_module(token, "tracker");
  create tracker ( token, op_context.last_block_time );
}
</string>
                            </entry>
                            <entry key="example_dapp1/tracker/module.rell">
                                <string>module;

import lib.yours;

entity tracker {
  key yours.token;
  mutable last_block_time: integer;
}

@extend(yours.populate_metadata)
function populate_metadata(yours.token, modules: set&lt;name&gt;): map&lt;text, gtv&gt;? {
  if (not modules.contains("tracker")) return null;
  val metadata = map&lt;text, gtv&gt;();

  val tracker = tracker @? { token };
  if (tracker == null) return null;

  metadata.put("Recent Mega Chain Visit", tracker.last_block_time.to_gtv());

  return metadata;
}

@extend(yours.after_apply_transfer)
function after_apply_transfer(yours.token, modules: set&lt;name&gt;,attributes: map&lt;text, gtv&gt;) {
  if (not modules.contains("tracker")) return;

  val tracker = tracker @? { token };
  if (tracker == null) {
    create tracker(token, op_context.last_block_time);
  } else {
    update tracker ( last_block_time = op_context.last_block_time );
  }
}</string>
                            </entry>